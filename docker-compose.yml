services:
  rabbitmq:
    image: rabbitmq:3-management-alpine
    hostname: rabbitmq
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: "guest"
      RABBITMQ_DEFAULT_PASS: "guest"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq

  games_shop:
    image: games_shop_image
    build:
      context: .
    container_name: games_shop_app
    env_file:
      - .env
    depends_on:
      - pg
      - redis
      - prometheus
      - grafana
    command: [ "docker/app.sh" ]
    ports:
      - 7777:8000

  redis:
    image: redis:7
    container_name: redis

  prometheus:
    image: prom/prometheus:v2.43.0
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheusdata:/prometheus
    restart: unless-stopped
    ports:
      - 9090:9090

  grafana:
    image: grafana/grafana:9.4.7
    container_name: grafana
    volumes:
      - grafanadata:/var/lib/grafana
    restart: unless-stopped
    ports:
      - 3000:3000

  pg:
    image: postgres
    environment:
      POSTGRES_DB: shop
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      PGDATA: /var/lib/postgresql/data
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 5s
      timeout: 3s
      retries: 3

  maildev:
    image: maildev/maildev
    environment:
      - TZ=Europe/Moscow
      - MAILDEV_WEB_PORT=1080
      - MAILDEV_SMTP_PORT=1025
    ports:
      - "8080:1080"
      - "1025:1025"
    logging:
      driver: "json-file"
      options:
        max-size: "1m"

  taskiq:
    build:
      context: .
    container_name: taskiq_broker
    command: [ "docker/taskiq.sh" ]

  celery:
    build:
      context: .
    container_name: celery_broker
    command: [ "docker/celery.sh" ]

  flower:
    build:
      context: .
    container_name: celery_flower
    command: [ "docker/flower.sh" ]


volumes:
  grafanadata:
  prometheusdata:
  pgdata:
  rabbitmq-data:
